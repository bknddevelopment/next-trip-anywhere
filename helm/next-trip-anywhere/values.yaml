# Default values for next-trip-anywhere
# This is a YAML-formatted file

# Deployment configuration
replicaCount: 3

image:
  repository: ghcr.io/charwinvanryckdegroot/next-trip-anywhere
  pullPolicy: Always
  tag: "latest"

imagePullSecrets:
  - name: ghcr-secret

nameOverride: ""
fullnameOverride: ""

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/api/metrics"

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 3000
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/rate-limit: "100"
  hosts:
    - host: next-trip-anywhere.com
      paths:
        - path: /
          pathType: Prefix
    - host: www.next-trip-anywhere.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: next-trip-tls
      hosts:
        - next-trip-anywhere.com
        - www.next-trip-anywhere.com

# Resource limits
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 100m
    memory: 256Mi

# Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - next-trip-anywhere
        topologyKey: kubernetes.io/hostname

# Health check probes
livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /api/ready
    port: 3000
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

startupProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 30

# Environment variables
env:
  NODE_ENV: production
  PORT: "3000"
  NEXT_TELEMETRY_DISABLED: "1"

# Config map values
config:
  apiUrl: https://api.next-trip-anywhere.com
  sentryDsn: ""
  gaMeasurementId: ""

# Secret values (base64 encoded in actual deployment)
secrets:
  databaseUrl: ""
  redisUrl: redis://redis-service:6379
  sessionSecret: ""
  jwtSecret: ""
  encryptionKey: ""

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Network policy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 3000
  egress:
    - to:
      - namespaceSelector: {}
      ports:
      - protocol: TCP
        port: 443
      - protocol: TCP
        port: 80
      - protocol: TCP
        port: 5432
      - protocol: TCP
        port: 6379
      - protocol: UDP
        port: 53

# Persistence
persistence:
  enabled: true
  storageClass: standard
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /app/.next/cache

# Redis configuration (if deployed alongside)
redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: true
    password: ""
  master:
    persistence:
      enabled: true
      size: 8Gi

# PostgreSQL configuration (if deployed alongside)
postgresql:
  enabled: false
  auth:
    postgresPassword: ""
    database: nexttrip
  persistence:
    enabled: true
    size: 8Gi

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    path: /api/metrics